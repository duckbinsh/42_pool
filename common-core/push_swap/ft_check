#!/bin/bash


echo -e "\e[1;33;4;5mPUSHSWAP CHECKER\e[0m"
#Norminette
echo -e "\e[97mNorminette:"
temp_file="norm.txt"
norminette > "$temp_file"

# Check if the file contains the error message
if grep -q 'Error:' "$temp_file"; then
    echo -e "\e[31m Error!"
else
    echo -e "\e[32m OK!"
fi
rm norm.txt



#Compilation
output="tmp.txt"
errorfile="error_file.txt"
echo -e "\n\e[97mCompilation:"
make > "$output" 2> "$errorfile"
if [ $? -eq 0 ]; then
	echo -e "\e[32m make succesful"
else
    echo -e "\e[31m make failed"
	exit 1
fi

make re > "$output" 2> "$errorfile"
if [ $? -eq 0 ]; then
	echo -e "\e[32m make re succesful"
else
    echo -e "\e[31m make re failed"
	exit 1
fi

make clean > "$output" 2> "$errorfile"
if [ $? -eq 0 ]; then
	echo -e "\e[32m make clean succesful"
else
    echo -e "\e[31m make clean failed"
	exit 1
fi

make fclean > "$output" 2> "$errorfile"
if [ $? -eq 0 ]; then
	echo -e "\e[32m make fclean succesful"
else
    echo -e "\e[31m make fclean failed"
	exit 1
fi

make > "$output" 2> "$errorfile"
rm error_file.txt


#Test error management
echo -e "\n\e[97mTest error management:"
ARG="0 1 2 3"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    echo -e "\e[32m 1: OK"
else
    echo -e "\e[31m 1: KO - list already sort [$ARG]"
fi
unset ARG

ARG="3 1 2147483647 5"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    echo -e "\e[32m 2: OK"
else
    echo -e "\e[31m 2: KO - INT_MAX [$ARG]"
fi
unset ARG

ARG="3 1 5 2147483647"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    echo -e "\e[32m 3: OK"
else
    echo -e "\e[31m 3: KO - INT_MAX at end [$ARG]"
fi
unset ARG

ARG="3 1 -2147483648 5"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    echo -e "\e[32m 4: OK"
else
    echo -e "\e[31m 4: KO - INT_MIN [$ARG]"
fi
unset ARG

ARG="3 1 5 -2147483648"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    echo -e "\e[32m 5: OK"
else
    echo -e "\e[31m 5: KO - INT_MIN at end [$ARG]"
fi
unset ARG

ARG="3 1 2147483648 5"
if [ "$(./push_swap $ARG)" == "Error" ]; then
    echo -e "\e[32m 6: OK"
else
    echo -e "\e[31m 6: KO - +INT_MAX [$ARG]"
fi
unset ARG

ARG="3 1 -2147483649 5"
if [ "$(./push_swap $ARG)" == "Error" ]; then
    echo -e "\e[32m 7: OK"
else
    echo -e "\e[31m 7: KO - -INT_MIN [$ARG]"
fi
unset ARG

ARG="1 1 5 8 7 3"
if [ "$(./push_swap $ARG)" == "Error" ]; then
    echo -e "\e[32m 8: OK"
else
    echo -e "\e[31m 8: KO -  duplicate number [$ARG]"
fi
unset ARG

ARG="1 5 8 7 3 1"
if [ "$(./push_swap $ARG)" == "Error" ]; then
    echo -e "\e[32m 9: OK"
else
    echo -e "\e[31m 9: KO -  duplicate number [$ARG]"
fi
unset ARG



# Test 3 elements
echo -e "\n\e[97mSimple version, 3 numbers:"
ARG="1 2 3"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 3 ]; then
        echo -e "\e[32m 1: OK"
    else
        echo -e "\e[31m 1: KO -  more than 3 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 1: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="1 3 2"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 3 ]; then
        echo -e "\e[32m 2: OK"
    else
        echo -e "\e[31m 2: KO -  more than 3 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 2: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="2 1 3"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 3 ]; then
        echo -e "\e[32m 3: OK"
    else
        echo -e "\e[31m 3: KO -  more than 3 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 3: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="2 3 1"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 3 ]; then
        echo -e "\e[32m 4: OK"
    else
        echo -e "\e[31m 4: KO -  more than 3 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 4: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="2146861940 2147227780 2146868722"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 3 ]; then
        echo -e "\e[32m 5: OK"
    else
        echo -e "\e[31m 5: KO -  more than 3 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 5: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="-2146772857 -2146803244 -2147380321"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 3 ]; then
        echo -e "\e[32m 6: OK"
    else
        echo -e "\e[31m 6: KO -  more than 3 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 6: KO -  Not sort or error return [$ARG]"
fi
unset ARG


# Test simple version
echo -e "\n\e[97mSimple version, 5 numbers:"
ARG="1 5 2 4 3"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 12 ]; then
        echo -e "\e[32m 1: OK"
    else
        echo -e "\e[31m 1: KO -  more than 12 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 1: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="64 -15 13 17 1"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 12 ]; then
        echo -e "\e[32m 2: OK"
    else
        echo -e "\e[31m 2: KO -  more than 12 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 2: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="-525 831 203 -634 301"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 12 ]; then
        echo -e "\e[32m 3: OK"
    else
        echo -e "\e[31m 3: KO -  more than 12 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 3: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="5 4 3 2 1"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 12 ]; then
        echo -e "\e[32m 4: OK"
    else
        echo -e "\e[31m 4: KO -  more than 12 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 4: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="2147075445 2146711869 2147115382 2147159802 2146757656"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 12 ]; then
        echo -e "\e[32m 5: OK"
    else
        echo -e "\e[31m 5: KO -  more than 12 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 5: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="-2147429756 -2146706989 -2147366375 -2146603218 -2147238560"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 12 ]; then
        echo -e "\e[32m 6: OK"
    else
        echo -e "\e[31m 6: KO -  more than 12 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 6: KO -  Not sort or error return [$ARG]"
fi
unset ARG



# Test middle version
echo -e "\n\e[97mMiddle version:"

ARG="-939 3713 5043 8831 6836 7833 9202 5850 4379 4800 325 3869 74 3871 2697 7319 5739 6021 7343 8235 6092 9461 2938 1894 -112 5108 3091 3766 8193 374 8989 8455 -977 2073 3126 7633 2197 2447 6538 6758 -1561 1743 8664 3145 -1297 1787 5745 6289 -145 1790 4435 1235 5692 -1319 416 7313 5393 6218 3414 -535 2945 509 1805 6294 9496 4203 5194 2233 6751 3199 2234 -958 3208 4783 5744 6204 6043 3957 8409 8288 5346 5156 8705 8576 -665 5426 5706 7931 3961 6358 -222 8107 7095 96 2436 3293 1113 2946 7801 1707"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 1500 ]; then
        echo -e "\e[32m 1: OK -  "$(./push_swap $ARG | wc -l)" instructions"
    else
        echo -e "\e[31m 1: KO - "$(./push_swap $ARG | wc -l)" instructions -- more than 1500 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 1: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="6721 4994 7281 2359 8718 -948 1815 -181 4836 1875 9342 -1187 4247 4123 9835 9012 5380 6672 -1441 9920 1780 -1529 2777 9286 4986 3231 -824 9982 7812 5466 2645 5724 4555 4908 8415 7194 1893 9711 5754 2044 1777 -1022 778 -989 3344 4772 4522 -102 8654 471 4518 2975 3504 3232 4844 5743 2531 -44 4261 9766 -977 3985 3740 -1514 978 819 1849 20 6255 4329 -1232 6627 5098 574 -416 6578 -1177 6826 -202 1129 9849 2453 3158 1766 3018 9796 2867 1714 455 9961 7471 6034 271 8238 -1332 132 3515 7786 -296 7931"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 1500 ]; then
        echo -e "\e[32m 2: OK -  "$(./push_swap $ARG | wc -l)" instructions"
    else
        echo -e "\e[31m 2: KO - "$(./push_swap $ARG | wc -l)" instructions -- more than 1500 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 2: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="-433572 -279172 38965 230730 -201052 86250 -318781 201240 -247933 220662 -188345 417079 -216455 -256243 -170166 167243 -447138 -262434 71516 27698 168429 -76764 -99331 288200 -437500 90768 -80570 -405343 303222 225409 -379900 61274 -277301 183315 441747 354597 126981 380121 325831 -1924 32737 -425304 77492 -24939 102576 428479 318804 -274081 -411479 352546 224610 68203 -333061 -241271 -217843 -22207 -376773 93894 -76318 -173587 -297310 -80846 -266550 -164565 -208517 -12502 110294 -128500 -249636 -425540 275015 -116918 55631 -35116 61947 150542 -418808 -314506 342924 -352153 -295731 -363277 342771 5477 -215355 90126 335574 356373 72204 -284270 -150395 -104682 425169 251229 410498 -48768 252505 -125763 -410879 -90845"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 1500 ]; then
        echo -e "\e[32m 3: OK -  "$(./push_swap $ARG | wc -l)" instructions"
    else
        echo -e "\e[31m 3: KO - "$(./push_swap $ARG | wc -l)" instructions -- more than 1500 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 3: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="2146833964 2147047035 2146997877 2146993904 2146617672 2147125731 2146704617 2147029494 2146887987 2146797151 2146627930 2147305267 2147447581 2146823748 2146936955 2147108213 2147228295 2146625880 2147328727 2146966242 2147423697 2147328402 2146885615 2147154657 2147348829 2147191450 2147013539 2147066033 2146896504 2146697086 2147146858 2146892540 2147263175 2147032549 2147460517 2146889672 2146842435 2146778541 2146989539 2146561304 2147319108 2146572511 2147364720 2147159516 2146683634 2146879325 2147368332 2146530678 2147397047 2146810734 2146849139 2147394616 2146545953 2146871512 2146700456 2147454902 2146524233 2146615026 2146532190 2146860693 2147162497 2146636482 2146851328 2146993149 2146767809 2146942634 2146872854 2147114321 2147164031 2147103642 2147385226 2146489278 2146797644 2146497963 2146817249 2146580673 2147050426 2147015055 2147009747 2147172691 2147386439 2146860589 2147400967 2147472445 2146587286 2146714761 2146545051 2147132378 2147252446 2146793637 2147424621 2146674958 2147291706 2147411906 2146689977 2147404849 2146670327 2146959873 2147206537 2147250433"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 1500 ]; then
        echo -e "\e[32m 4: OK -  "$(./push_swap $ARG | wc -l)" instructions"
    else
        echo -e "\e[31m 4: KO - "$(./push_swap $ARG | wc -l)" instructions -- more than 1500 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 4: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="-2146830804 -2147129237 -2147188919 -2146794778 -2146610010 -2146826025 -2147466847 -2147364596 -2146715921 -2146526174 -2146997889 -2146585118 -2146786015 -2146788156 -2147482154 -2146980780 -2147372841 -2147084201 -2147293167 -2147032210 -2146895333 -2146827912 -2147145011 -2146876578 -2147229977 -2146716445 -2147103447 -2146831224 -2147107738 -2146485412 -2146667116 -2146822374 -2147226138 -2146700809 -2147060972 -2146884905 -2147188619 -2146962735 -2147251954 -2146877807 -2147420803 -2147208044 -2147455792 -2146999081 -2146976556 -2147003437 -2146820155 -2147328600 -2147122383 -2147010579 -2147464115 -2146583202 -2146589077 -2147136354 -2147377965 -2147209487 -2146922557 -2146811488 -2146774346 -2147191210 -2146744299 -2146980342 -2146742780 -2146871158 -2147266523 -2147038126 -2146515549 -2147404438 -2147003697 -2147462234 -2147302043 -2147228630 -2146936174 -2146656535 -2146631623 -2147191202 -2146873706 -2146975668 -2146957795 -2147311552 -2147051924 -2146556083 -2146948761 -2146736106 -2147207327 -2146667220 -2147029726 -2146897897 -2146848748 -2146700305 -2146959335 -2147053738 -2146810776 -2147423343 -2146971574 -2146527038 -2146699505 -2146791678 -2147106902 -2146881128"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 1500 ]; then
        echo -e "\e[32m 5: OK -  "$(./push_swap $ARG | wc -l)" instructions"
    else
        echo -e "\e[31m 5: KO - "$(./push_swap $ARG | wc -l)" instructions -- more than 1500 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 5: KO -  Not sort or error return [$ARG]"
fi
unset ARG



# Test advanced version
echo -e "\n\e[97mAdvanced version:"

ARG="-290559 239070 -25261 210626 -350460 -283034 438374 -366971 -334912 350108 163595 151500 251436 88246 -408915 -344124 89014 282044 166992 70090 -395036 158498 70155 398264 -150879 -78042 -28775 116891 365593 17585 336999 4197 206212 -9179 311242 307002 -429862 -194437 227007 -364822 -4283 -210689 73042 -160293 -259676 436491 -404816 -438549 -375130 -191113 101712 61012 -217287 334016 356519 -145120 -370738 350973 -195984 -342354 -426592 389666 18515 -7453 -300235 227620 383098 182336 -405118 -335050 -159058 -419887 246490 55837 429248 -110877 -86632 -363684 97496 11660 386242 -320109 -32565 252790 53858 145495 379248 303725 -419181 -132063 -310988 -210103 248132 -113807 -364333 84660 147265 -408968 320340 339203 3168 -179063 -277970 -261025 326949 142801 -58818 -78439 146952 -437677 316478 121321 -14356 -174458 38067 391640 170799 98092 371268 -187604 85632 6418 -14550 -264424 409794 -402569 -392205 -240950 -337625 -78527 223409 305153 -395307 -21180 83325 -272172 68015 -307190 123648 31085 -109549 -237376 -357133 -407843 -41815 -276478 402963 -51646 -364479 -247835 -105137 -313562 443225 -273410 418638 -152866 9864 -92361 -424194 157778 16943 123160 246561 183743 143173 -132845 365679 -356356 28489 12552 -292947 -436086 -404656 82441 308852 -335120 351731 56977 -396213 -416551 213005 -387718 241855 -166562 147734 -358345 84064 80891 254579 182118 91791 257216 -208117 -290363 -212149 43448 237571 7286 84551 -136352 17181 -202168 168862 78481 306597 -141053 -291458 -339082 447809 256820 -144949 -43478 130672 -220310 -42554 -406095 -109134 -318035 44371 -59730 -132682 261840 -184709 10384 -75794 289949 -434259 422753 99477 -435905 -86197 -157086 -131242 -306339 35544 -31040 314316 -96988 105383 -285110 -51758 362078 -298117 193331 57197 -439042 59527 -370733 -213832 -333648 -84691 440234 -265836 -230086 -126731 370503 -90211 344173 -303132 -183717 -138763 -297108 -312391 -116010 431398 -441520 53610 -149706 -369377 23181 -410027 -319127 82357 -167796 -26560 186458 -446506 -311559 -163485 -289328 -129438 441908 142546 4007 -111863 -299656 155151 -218443 -352978 -232007 -55404 -448003 264862 309495 325416 -198281 -298227 259619 -154736 240289 148341 143737 223812 -352306 -403013 157491 178185 -287244 34497 57731 222435 -374344 -228762 324876 -13150 -23867 191792 176318 252677 162349 -139328 -91738 -65597 -247117 -105445 -325476 351659 25590 170768 68754 -64131 378939 335837 287827 22571 -46663 102408 -429216 -429758 359528 -56560 288949 -364854 -32631 331541 -30725 244075 168334 104962 418272 -354513 -188605 438283 -113197 55601 411970 276838 235167 -155431 -117676 -17661 119561 342093 -100523 131995 140637 333465 375128 -92684 -230616 122476 -409766 -323289 94547 184117 -164056 396880 -296749 -272693 350350 286387 -190673 29737 -202459 -28610 -79450 417103 79074 -60128 -246411 -300558 -26986 -416981 232724 35360 432088 -263179 239752 400189 9429 -162706 91976 -301852 198758 -299794 -418266 -236442 -285748 30427 92379 399409 43105 -326605 385844 4641 -119453 439221 448945 144646 -80412 168933 -310513 -131281 -220944 -295654 345675 263971 -386912 -45486 -235214 42656 -79827 173840 -168251 416282 70956 414517 125397 -140614 -366308 -98295 427360 299426 -296781 301860 355928 -228508 169123 108970 159748 -229227 -156740 388100 136019 35371 252754 -136307 -244467 -299089 222226 113092 130153 88616 -314836 98927 113506 -127727 170163 -42420 -126231 -410735 230854 312031 111283 308016 -365436 -365166 -233110 390661 -216587 -10527 268643 46306 -94511 251064 -112708 -296885 -139697 219908 97461 335280 224390 -383789 -433571 -8006 -49349 -43202 -296401 -282384 319668"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 11500 ]; then
        echo -e "\e[32m 1: OK -  "$(./push_swap $ARG | wc -l)" instructions"
    else
        echo -e "\e[31m 1: KO - "$(./push_swap $ARG | wc -l)" instructions -- more than 11500 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 1: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="-3207 223051 376296 -428460 -118482 -319070 387036 -309060 221317 29750 238076 -294963 -317511 159393 87176 275730 280323 -321054 -258300 293919 -258365 159924 72571 215196 -145443 148796 -94863 397653 -147528 246533 -197826 190705 -92593 46402 426898 -113618 -396883 -124698 -320601 -324385 -226738 -420841 359473 270589 -288584 -115177 201821 378076 442073 216953 -443720 -150681 16371 -261229 -304851 -431972 269965 5880 395664 -395582 -234239 125830 -298575 106134 177024 203417 133668 -204583 -179707 -399377 -52793 210403 -207160 425073 -138914 300093 -94899 273148 -249564 83646 -184112 -375505 1172 -202643 -309612 132885 -121016 -130343 306088 402683 59453 224543 -419310 -333912 35367 110500 175614 251622 91745 -153916 401887 253018 262368 -317891 152349 -421198 -223750 150137 -403549 -59415 261906 337629 124706 -258456 366368 -264835 57559 364627 -260883 396560 -115943 444242 73561 342214 107762 278693 -57099 158956 267001 308907 353292 -119113 319645 253234 -68447 355844 382578 -262043 -136171 304115 -393252 -301289 -366318 -202601 -129323 419450 -199891 79493 35661 175686 -319357 -253625 -416152 319554 -257792 -121535 -302960 -425188 235058 23817 28861 17374 -116157 -175756 -27896 -420448 197468 -414991 83547 43321 -124142 -332635 -163111 325696 -192487 -49330 73999 229368 -148474 -85921 107748 -346920 386556 209204 -319018 28546 -12320 -80645 -126019 -46341 -202745 -311091 316125 -39400 -403237 -239689 247593 -175403 -290536 -173779 31327 109195 139662 119032 -214400 -148524 287661 -220077 302823 308995 125987 389522 -35972 44630 68889 276724 -345149 151074 53036 -99323 -9737 61228 186123 230012 316729 -395020 391129 57689 -206583 -37871 -233249 27789 -58254 269030 227529 -173776 142640 -81961 112127 -306302 -199760 -251834 -197993 236144 110503 -53855 -169368 -54640 262239 -180014 -395584 -365132 -109020 300744 267803 73764 141791 -158532 375855 -364403 444317 162251 387307 -329287 111797 -215863 301500 -439753 163601 -436799 83563 73071 238631 -251188 -335954 423094 285184 282559 244046 282182 -367125 295503 224548 -321666 -330507 -136292 238121 -25329 -190014 -59657 -360723 -11522 -119782 445597 88310 -353023 351186 400914 -352430 -249690 163516 244176 -442531 447463 405950 -48358 -323939 197444 -224204 17879 152659 -422059 -406271 405913 157785 -159981 -143870 -194060 -398529 -15205 -372391 -390194 331334 -169615 -27010 145100 246835 -72738 -11408 87569 -300128 -121564 -52945 206273 -379504 22375 318111 -108966 322918 406140 -197889 283339 36375 -340214 -286651 -167542 91888 -155610 -220135 143504 -6596 -358942 -144458 316873 284588 -403232 57747 361644 -163678 95039 -156151 -86499 330079 -311679 339413 152919 321800 441906 -3544 108943 -359103 -81466 -242020 109126 -282438 303547 126891 317804 -52884 -356332 -238552 186988 -75116 86648 -33726 297261 313288 239391 124655 155248 -141454 151730 335574 -397188 411781 -112981 180919 440687 -153235 217350 -9167 391424 424210 352563 -303276 292567 262616 310512 277932 -138095 166746 -393421 -80706 -90705 131448 23404 -9522 431001 -30421 -20476 -384718 358012 -387058 -256642 -369606 196659 178786 365670 321976 206087 140274 367334 4762 -172333 -396876 -372794 -193604 -335517 -99020 -129169 -168997 352156 -116263 -334839 15870 -336838 155650 -64511 278432 259086 -180426 -439689 203089 -354884 -283698 -349762 -247439 180882 244294 -192256 154334 260014 246683 -268139 -217649 -315747 -233804 148922 370392 287345 -293385 341385 82834 221049 -260857 -44093 316430 -247637 -149725 247093 334015 -2554 105614 446992 -396286 -343203 -376295 -150938 -401456 -352489 240692 244032 -386176 -394665 -187458 443380 126620 24492 320090 -180248"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 11500 ]; then
        echo -e "\e[32m 2: OK -  "$(./push_swap $ARG | wc -l)" instructions"
    else
        echo -e "\e[31m 2: KO - "$(./push_swap $ARG | wc -l)" instructions -- more than 11500 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 2: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="-173071 -311037 -365162 118075 191249 -230636 -412284 -406114 -324144 -199925 -402764 -88634 295018 -39778 277554 -264926 117054 -443691 -165290 108632 -37972 39072 109142 -207732 -115399 100775 85811 -162598 403339 66720 -4514 -371767 422251 367990 -193872 -339611 151817 248894 355539 -182200 11738 -233640 -249621 378825 -358307 -272653 60902 -161635 32201 -420473 405284 -180379 140148 73302 188313 68837 175968 128348 -352807 -316226 -237997 221512 445664 83705 298724 -236779 -140455 -157091 -300941 243371 189536 -99220 130210 -90124 -78267 -220162 109266 149175 -7351 -311147 -110439 -149045 365484 131474 -79178 -122095 -323421 205135 217075 104029 187825 442948 6725 248193 -238098 -43396 -20249 -90370 -231159 -437508 -225634 -402413 355486 -412280 -272992 -206679 -147540 124183 -422166 -208716 -212743 234808 129370 244941 -120677 -408984 -46889 -351613 204636 -136044 79362 -297254 182500 370159 -445141 18098 -85378 21768 -143098 303102 323917 -408660 246969 371054 128367 367729 381649 327437 -351440 -64804 102636 405860 -265429 -365354 306938 318319 107700 -174654 333080 120757 -36936 78498 -424439 4079 69661 328329 207422 -436027 439045 273137 26349 -318311 84312 -34618 431588 -447568 85516 -147291 77962 433449 -30316 56503 73824 -235641 -364324 -247687 410845 37494 449060 330403 157663 -295415 351433 -251173 22253 5055 -35834 -39026 437221 152403 -398845 -306899 294666 -408707 -163802 -286930 404099 -231599 56997 -169731 -26764 242517 -433956 215797 266709 -47550 -382659 56150 335607 -272408 -150860 264231 -321457 56640 -107744 264278 18932 156414 -434928 -110432 -387847 -422694 -223766 202558 170080 -108955 -363518 90549 102308 -193667 194217 -276992 440368 -363619 -242086 126446 -410410 211275 118389 80503 427864 -201892 -2980 -88797 347161 307647 -166372 -311864 163239 379573 142680 343955 -178557 -417123 98154 -90244 39029 287512 -232839 -89787 -162967 -189686 -270523 198480 -50865 -302389 151104 251242 138764 57735 257843 407847 -175003 -83186 -218025 -322595 295044 303699 -439991 38652 126826 108381 447519 285798 -42998 178740 -448804 -380359 -233521 94754 349585 -11207 -120487 336440 -365368 -407091 277309 -374902 -416973 308798 26339 352229 -284301 205014 290319 386468 -186119 1141 -147317 421822 325339 -241395 89429 96047 -237683 124799 -321117 -142792 -125142 216023 336908 -295893 300185 430595 -409611 -353454 -25222 288233 -176622 -139729 176485 135425 -38245 347316 360038 37724 332028 345462 212890 365569 -183396 168398 -191988 389300 291252 -31587 -240611 -334849 151538 89131 276659 -41550 -28169 118831 357051 -414701 75939 116509 226023 95666 375973 -447654 45461 192746 -262436 256025 139225 168120 448800 -378600 215921 326083 -314388 -9655 42187 65443 -255313 -165228 159276 -181025 13762 -326015 -184948 -30622 -298436 216335 132545 -76548 232448 69630 -27006 359838 -341795 -216071 -133684 -114103 332834 -411743 50935 -351871 -283960 423596 -66725 -33934 399507 328354 440605 -166209 100389 124359 -307805 -416144 -254053 114933 292710 202817 260108 70780 -103684 150483 192607 -169478 -221095 400872 -295403 269375 -359734 -449556 -361562 -447933 320446 365339 275079 -183528 93671 238332 -91251 194791 144447 -386979 177775 -394795 -392764 -77497 -442477 333834 28011 102531 -439634 290278 -283100 -140346 -302549 -422292 288980 -315646 107666 400684 166703 391992 200870 39161 23483 -5162 116313 250373 -401921 -305036 -394040 427563 51664 -622 20654 -342495 -382153 216405 161327 -445657 19068 -345363 353867 187791 424933 -99509 -181991 -108810 306726 -146390 -399365 -349944 325328 206794 -34670 100348 184427 -200943 -158013 162880 129128 -276343"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 11500 ]; then
        echo -e "\e[32m 3: OK -  "$(./push_swap $ARG | wc -l)" instructions"
    else
        echo -e "\e[31m 3: KO - "$(./push_swap $ARG | wc -l)" instructions -- more than 11500 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 3: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="2147336341 2146764463 2147034998 2147149653 2146627791 2147088589 2147093406 2146934477 2147295098 2147383096 2146751616 2146885218 2147244217 2146636476 2147006542 2146647652 2146527809 2147103362 2146543150 2146501534 2147124398 2147226387 2147390407 2146915908 2146524908 2147334941 2147196244 2146946138 2146725627 2146573444 2146924712 2146699723 2146921904 2146773133 2147050934 2147190095 2146707416 2147390600 2146614527 2147399349 2147379229 2146683334 2146979660 2147106167 2146869615 2146891842 2147378830 2147048570 2146640139 2146581127 2146633735 2146664574 2147009203 2146717627 2147135148 2147225979 2146567820 2146942749 2147241756 2147454636 2147428486 2146720932 2147064842 2147028430 2147318144 2146618226 2146823802 2147375185 2146882269 2146761505 2147441638 2147198806 2146516809 2147226233 2146957533 2146855405 2146747042 2146651189 2147008019 2147245074 2147053046 2147281557 2147357047 2146662042 2147005650 2147209560 2147024412 2147023949 2147367452 2146960106 2147057794 2146843255 2146520699 2147135611 2146713417 2147000068 2146538169 2146999166 2147178353 2147046508 2147130847 2146918076 2146668769 2147325184 2147167733 2146722160 2147125682 2146752730 2146727744 2147021846 2146749177 2146701308 2147209547 2146737695 2146614730 2146591228 2147087708 2146762895 2146585301 2146622675 2147139820 2146669431 2146542399 2146694905 2147206770 2146922544 2146542570 2147062168 2147278972 2146929268 2147213154 2146991844 2147100843 2147041955 2146596204 2147038535 2147337360 2146564354 2146607888 2146933746 2146556399 2146796885 2146591043 2147386767 2146888128 2147142542 2147050531 2146757381 2147205153 2147069354 2146675834 2146607616 2146706683 2146976670 2147473660 2146756063 2147466330 2146490300 2146703317 2146564332 2146569278 2146772739 2147396814 2147379450 2147218470 2146547938 2146722631 2147246416 2146820390 2146882364 2146698724 2146930377 2146691068 2146771324 2146746384 2146498624 2146497399 2146870521 2147051977 2147168028 2147016283 2147478285 2147285894 2146670698 2146647264 2147172447 2147369200 2147407774 2147070415 2146636280 2147043997 2146551895 2146549841 2146706753 2146597523 2146980987 2147091702 2146792200 2147375011 2147394841 2146602686 2147279956 2146747467 2146876116 2147266300 2147078356 2147163493 2146533222 2147388321 2146711777 2147197943 2146787886 2146715295 2147416928 2146778583 2146866020 2147278032 2146842359 2147040920 2146902218 2147403103 2147231165 2146496386 2146955392 2146788157 2146734328 2146572222 2146922810 2147338632 2147161565 2146918778 2146630591 2147356260 2147280122 2146728507 2147420117 2146812242 2146764367 2146952445 2146991741 2147300282 2147314817 2146582741 2147133849 2146928385 2146836250 2146939410 2147076390 2146813273 2147243680 2146957113 2147321023 2146717017 2147147923 2147343499 2146638609 2146809258 2147373730 2147401323 2147318474 2147219291 2146897434 2147162705 2147121109 2147378416 2146991611 2147326329 2146785342 2146599301 2147301554 2147077626 2146586795 2147234771 2147402945 2147055100 2147327474 2146633009 2146812881 2147121120 2146616235 2146633248 2147274856 2147399216 2146546586 2146646128 2147249037 2147340592 2147041546 2147050724 2147213705 2146753563 2147383836 2147139511 2146837722 2146675179 2146792023 2147151777 2146774131 2146796868 2146586719 2147154683 2146552846 2146953718 2146800582 2146759841 2146668340 2146717816 2146575834 2147445262 2147464400 2146898033 2147203756 2146552366 2147395930 2147316076 2147177338 2147093011 2147267186 2146716407 2146804366 2146824908 2146920647 2147335380 2147074078 2146804277 2147012489 2147473742 2146502366 2146542900 2146808816 2146857952 2147271795 2146952383 2146535314 2146748681 2146572113 2146555437 2147003281 2146599214 2147311760 2147260840 2147316012 2147361407 2146951669 2147223982 2146563367 2146887621 2146967681 2147127499 2146538476 2147380644 2147390841 2146860496 2147126686 2147330670 2147010226 2146739537 2146900932 2146591214 2146979423 2147125516 2147447335 2146915339 2146780212 2146636213 2146976976 2146924692 2147123478 2146944187 2146507434 2146774710 2146947040 2147018092 2147016782 2147438769 2147197524 2147171006 2147331380 2147046016 2147411660 2146581406 2147433537 2146695351 2146967901 2147392714 2146818005 2146659359 2147131865 2146539832 2146541791 2146641138 2146695200 2147430565 2147318687 2147334005 2147474109 2147256794 2146536838 2146840915 2146537612 2146655396 2146911713 2146621558 2147464738 2146909489 2146699387 2146938782 2146530054 2146703809 2146854686 2146483709 2146716758 2147145516 2147157274 2146736963 2147110819 2146862340 2147110652 2147476160 2146487285 2147101719 2146943494 2147370224 2147076237 2146770471 2147169760 2147370651 2147294043 2147309452 2147328379 2146642485 2146856038 2146613474 2146728550 2146717191 2147134385 2147372637 2146979644 2146952163 2146526742 2146902061 2147003445 2146502809 2146929767 2147160527 2146784535 2146786678 2147284148 2147021222 2147285469 2147119509 2147386088 2146824542 2147293833 2147323514 2147204318 2147150888 2147100404 2147051098 2147217480 2146867477 2146547141 2146770202 2146538053 2147269007 2146967875 2147083254 2146924974 2147332737 2147466341 2147381414 2146601714 2146998970 2146621211 2146513734 2146627461 2147269484 2146870655 2146654147 2147069563 2146971162 2147421740 2146835113 2146684673 2146952573 2146543873 2146806149 2146667155 2147177175 2147099307 2146513768 2146937468 2147316997 2147326977 2146801852 2147316935 2146617554 2147037681 2147455230 2147419697"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 11500 ]; then
        echo -e "\e[32m 4: OK -  "$(./push_swap $ARG | wc -l)" instructions"
    else
        echo -e "\e[31m 4: KO - "$(./push_swap $ARG | wc -l)" instructions -- more than 11500 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 4: KO -  Not sort or error return [$ARG]"
fi
unset ARG

ARG="-2146547602 -2146684458 -2147002187 -2147452965 -2146864270 -2147370214 -2146799152 -2146571440 -2147096963 -2147025001 -2147018068 -2146985278 -2147424472 -2147378908 -2147146331 -2146748246 -2147162055 -2146817516 -2147064441 -2146743610 -2147375715 -2146564040 -2146714210 -2147163226 -2147270988 -2146527003 -2147150488 -2147018687 -2146789130 -2146739370 -2147020784 -2147193158 -2146836984 -2146708443 -2146531474 -2146601126 -2146727192 -2146661187 -2147410631 -2146644310 -2146778117 -2146943624 -2147087648 -2146853178 -2147208125 -2147377603 -2147002275 -2146903813 -2147271049 -2147230437 -2147156285 -2147236775 -2147265282 -2147229623 -2147351949 -2146657251 -2147119502 -2147240742 -2146532598 -2146996012 -2146640745 -2146587102 -2147089515 -2146873360 -2146618602 -2147227142 -2147357026 -2146577388 -2146936731 -2146968021 -2146555298 -2147127173 -2146562076 -2146910784 -2147228338 -2147165078 -2147346524 -2147257529 -2147452980 -2146720882 -2147003072 -2146619257 -2146937512 -2147203373 -2147131242 -2146801065 -2146694852 -2146489355 -2147000959 -2147070168 -2146858612 -2147330612 -2147301359 -2146856638 -2146612833 -2147387733 -2146662798 -2147291865 -2146683963 -2146735228 -2147026772 -2146836698 -2146767786 -2147383891 -2146915579 -2146807802 -2147028477 -2146574671 -2147074994 -2147421381 -2147258295 -2147279719 -2146886005 -2147133163 -2147166839 -2147178308 -2146915708 -2147234349 -2146622543 -2147117861 -2146946358 -2147208663 -2146848818 -2146968621 -2147242735 -2147055090 -2146599882 -2146665354 -2146805280 -2147386378 -2147357653 -2147109387 -2146571415 -2146569368 -2147170964 -2147348291 -2147372201 -2147434439 -2146966451 -2147227601 -2146864555 -2146748028 -2146507514 -2147181611 -2147260201 -2147198207 -2146544917 -2146584677 -2146802920 -2146987418 -2146688149 -2146901607 -2146726858 -2147001468 -2146532509 -2147386732 -2146530246 -2146722080 -2147006361 -2146883564 -2146493590 -2146661383 -2147247778 -2146599778 -2147100216 -2146654326 -2147019431 -2146999942 -2147125848 -2147291541 -2146790461 -2147217024 -2147142693 -2147119202 -2147254892 -2146830802 -2147126384 -2147254946 -2147010610 -2146699972 -2146970008 -2146705150 -2147109788 -2146858714 -2146884064 -2146690663 -2147245898 -2147455389 -2146655286 -2147018020 -2146818860 -2146956469 -2147171514 -2147322548 -2147466311 -2146548873 -2147246935 -2146739581 -2146994432 -2147294997 -2146660949 -2147199377 -2146915850 -2147403168 -2147001325 -2147261704 -2147309670 -2147456631 -2147070944 -2147421046 -2146556128 -2146931957 -2146490952 -2146573630 -2146596568 -2147408294 -2147019019 -2146877431 -2146985546 -2147354327 -2146987513 -2146973217 -2147375709 -2147076264 -2147128903 -2147357633 -2146915380 -2147437957 -2147473897 -2147115881 -2147442970 -2147195189 -2147452178 -2146498952 -2146538650 -2147152708 -2147188986 -2146875143 -2146886804 -2147447319 -2147038693 -2147327775 -2146591607 -2146584875 -2146866398 -2146500530 -2147473200 -2146582088 -2146516410 -2146485887 -2147034866 -2147125805 -2146993234 -2147316693 -2146500377 -2147209153 -2147290669 -2147170064 -2146683349 -2147295213 -2147247768 -2147094077 -2146899146 -2146948346 -2146734518 -2147482217 -2147012794 -2147397402 -2147274487 -2147263803 -2147272902 -2146777005 -2147007824 -2146846120 -2146999175 -2146886445 -2146646402 -2147128734 -2146645567 -2147351508 -2146758557 -2147037594 -2146853580 -2146523289 -2146863409 -2147092728 -2146905624 -2146592616 -2147220587 -2147395136 -2147149454 -2146894694 -2146582905 -2146982861 -2146997618 -2146797687 -2146885160 -2147115244 -2147362294 -2146620997 -2146890153 -2147104536 -2147310331 -2146510448 -2146999794 -2147319789 -2146643493 -2146963028 -2146986127 -2146755446 -2146916824 -2147465314 -2147379225 -2146710571 -2146920226 -2146545917 -2146713689 -2147027905 -2147373724 -2146902205 -2146550023 -2147351675 -2147387539 -2146738281 -2147461586 -2147076137 -2146887686 -2146844069 -2146894219 -2146868673 -2146605277 -2146486459 -2146893039 -2147340113 -2147137049 -2146787868 -2146565336 -2147207353 -2146885289 -2147358626 -2146553361 -2147161752 -2147267861 -2147125358 -2146813278 -2146879863 -2147070498 -2147293186 -2146892387 -2146916250 -2146950138 -2147062090 -2146914230 -2146615167 -2146484869 -2147385681 -2146954664 -2146847903 -2146683051 -2146544574 -2147368095 -2147095836 -2146504551 -2146485917 -2147381646 -2147147709 -2146977674 -2147147440 -2146902264 -2147171285 -2147388522 -2146587978 -2146637338 -2147043636 -2146751869 -2147193613 -2146520817 -2147386112 -2146506336 -2147054126 -2146636902 -2147167979 -2147222921 -2146580996 -2147299932 -2146567197 -2146644685 -2146727932 -2147166146 -2146629658 -2147148997 -2146777402 -2146892078 -2147040486 -2147413853 -2146586058 -2147353208 -2147116546 -2147235974 -2147048380 -2146766179 -2146973960 -2147330799 -2146968593 -2146976227 -2146743510 -2147065444 -2147304373 -2147063258 -2147251266 -2147199326 -2146631160 -2147037050 -2147343767 -2146634380 -2147081826 -2146997015 -2147251647 -2146955599 -2147094726 -2146566857 -2147104603 -2146507241 -2146683437 -2146621311 -2146984527 -2146887163 -2146939594 -2147469131 -2147019274 -2147218659 -2146875605 -2147068979 -2147337647 -2147273681 -2146960605 -2147168044 -2147139140 -2146604520 -2147105268 -2146834387 -2146878531 -2147115289 -2147027037 -2147073832 -2147351783 -2146916754 -2147377783 -2146905486 -2147402214 -2146980441 -2147343817 -2146948878 -2147034361 -2146484577 -2146529675 -2147218846 -2146650340 -2146990841 -2146638566 -2146903607 -2147260151 -2147027266 -2147071477 -2146539619 -2146912502 -2146858323 -2146738368 -2147156518 -2146890215 -2147296792 -2147294664 -2147079659 -2147017745 -2146884214 -2147016269 -2147345152 -2147122147 -2146753164 -2146528808 -2147326427 -2147373654 -2147236188 -2147333305 -2146842549 -2146511594 -2146511022 -2146668354 -2147232496 -2147086464 -2146992415 -2147323435 -2147432640 -2147365180 -2146870711 -2146909122 -2147161576 -2147100753 -2147461401 -2147269114"
if [ "$(./push_swap $ARG | ./checker_linux $ARG)" == "OK" ]; then
    if [ "$(./push_swap $ARG | wc -l)" -le 11500 ]; then
        echo -e "\e[32m 5: OK -  "$(./push_swap $ARG | wc -l)" instructions"
    else
        echo -e "\e[31m 5: KO - "$(./push_swap $ARG | wc -l)" instructions -- more than 11500 instructions [$ARG]"
    fi
else
    echo -e "\e[31m 5: KO -  Not sort or error return [$ARG]"
fi
unset ARG


make fclean > "$output"
rm tmp.txt
exit 0
